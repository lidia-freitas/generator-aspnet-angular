%link-button{
    font-family: $fontTitlesB;
    font-size: 1.2rem;
    text-decoration: none;
    @include transition(all, .2s, ease-in-out);

    &:hover{ color: map-get($colorsFonts, neutral);

        &.disabled{
            opacity: 0.3;
            cursor: default;
        }
    }

    %colorfull{
        color: map-get($colorsBranding, mainFeat);
    }

    %neutral{
        color: map-get($colorsFonts, neutral);
    }

    %dashed{
        text-decoration: underline;
    }

    %btn-default{
        font-family: $fontTitlesB;
        text-transform: uppercase;
        font-size:1.1rem;
        color: #fff;
        border: none;
        cursor: pointer;
        display: inline-block;
        text-shadow: none;
        text-decoration: none;
        @include border-top-radius(0.3rem);
        @include border-bottom-radius(0.3rem);
        @include transition(all, .2s, ease-in-out);
        &.loading {
            padding-right:4.6rem;
            cursor:default;
            position:relative;

            &:after{
                margin:-1.0rem 0 0 0;
                content:''; width:2.0rem;
                height:2.0rem;
                background:transparent url('../img/loading.png') no-repeat center;
                background-size: 1.4rem;
                position:absolute;
                top:50%;
                right:1.6rem;
                @include animation(spinner-transition (1.0s infinite linear reverse));
            }
        }
    }

    @mixin my-button ($color, $background, $size){
        @extend %btn-default;
        color: $color;
        background-color: $background;

        @if $size == "small"{
            padding: 0 3rem;
            line-height: 3.2rem;
            font-size: 1.1rem;
        }@else if $size == "big"{
            padding: 0 3rem;
            line-height: 5.2rem;
            font-size: 1.8rem;
        }

        &:hover{
            background: darken(desaturate($background, 20%), 10%);
        }

        &[disabled]{
            opacity: 0.3;
            cursor: default;
        }

        &.ripple{
            overflow: hidden;
            position: relative;
        }
    }

    $others-buttons: (
    ("blue",  #fff, #397999, "small", "big"),
    ("gray", #666, #eeeeee, "small", "big"),
    ("darkgray", #fff, #9e9e9e, "small", "big"),
    ("red", #fff, #ff675b, "small", "big"),
    ("orange", #fff, #f29c64, "small", "big"),
    ("green", #fff, #a3d06d, "small", "big"),
    );

    @for $i from 1 through length($others-buttons) {
        $_button : nth($others-buttons, $i);
        $_class  : unquote(nth($_button, 1));
        $_color  : nth($_button, 2);
        $_background  : nth($_button, 3);
        $_small  : nth($_button, 4);
        $_big  : nth($_button, 5);

        .#{btn}-#{$_class}-#{$_small} {
            @include my-button($_color, $_background, $_small);
        }

        .#{btn}-#{$_class}-#{$_big} {
            @include my-button($_color, $_background, $_big);
        }

        .btn-modal{
            @extend .btn-green-small;
            float:right;
        }
    }
}
